% Copyright (C) 2020 Christian Bockermann
%
%     https://github.com/cbockermann/beamer-theme-hsbo
% 
% This file is part of beamerthemehsbo. 
% beamerthemehsbo is directly derived from beamerthemefocus by Pasquale Claudio Africa.
% 
% beamerthemehsbo is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% beamerthemehsbo is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with beamerthemehsbo. If not, see <http://www.gnu.org/licenses/>.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{beamerthemehsbo}[2020/09/30 v0.1 hsbo Beamer theme]

\mode<presentation>


% THEME OPTIONS. ---------------------------------------------------------------
\DeclareOptionBeamer{numbering}{%
    \PassOptionsToPackage{numbering=#1}{beamerouterthemehsbo}
}

\newif\if@hsbo@loadfirafonts
\@hsbo@loadfirafontstrue

\DeclareOptionBeamer{nofirafonts}{\@hsbo@loadfirafontsfalse}
\ProcessOptionsBeamer


% LOAD EXTERNAL PACKAGES. ------------------------------------------------------
\if@hsbo@loadfirafonts
    \RequirePackage[T1]{fontenc}
    
    \PassOptionsToPackage{type1}{FiraSans}
    \PassOptionsToPackage{type1}{FiraMono}
    
    \RequirePackage{FiraSans}
    \RequirePackage{FiraMono}
\fi


\usecolortheme{hsbo}
\usefonttheme{hsbo}
\useinnertheme{hsbo}
\useoutertheme{hsbo}

\RequirePackage{tikz}
\usetikzlibrary{arrows,mindmap,trees}

\RequirePackage{graphicx}
\RequirePackage{ngerman}

\addtobeamertemplate{block begin}{\pgfsetfillopacity{0.75}}{\pgfsetfillopacity{1}}

\defbeamertemplate{block begin}{notitle}
{
  \usebeamerfont{block body}%
  \begin{beamercolorbox}[colsep*=.75ex,vmode]{block body}%
    \ifbeamercolorempty[bg]{block body}{\vskip-.25ex}{\vskip-.75ex}\vbox{}%
}

\setbeamerfont{sectiontitle}{size=\huge, series=\bfseries}
\setbeamerfont{frametitle}{size=\Large}

\setbeamertemplate{navigation symbols}{}


% SET MARGINS. -----------------------------------------------------------------
\setbeamersize{text margin left=0.75cm, text margin right=0.75cm}
\setlength{\leftmargini}{0.75cm}


%%
%% ---------------- Define Source Code Styles for VBA  --------–--------–--------–
%%
\RequirePackage{listings}

\renewcommand*{\lstlistlistingname}{Code Listings}
\renewcommand*{\lstlistingname}{Code Listing}
\definecolor{gray}{gray}{0.5}
\colorlet{commentcolour}{green!50!black}
\colorlet{stringcolour}{red!60!black}
\colorlet{keywordcolour}{magenta!90!black}
\colorlet{exceptioncolour}{yellow!50!red}
\colorlet{commandcolour}{blue!60!black}
\colorlet{numpycolour}{blue!60!green}
\colorlet{literatecolour}{magenta!90!black}
\colorlet{promptcolour}{green!50!black}
\colorlet{specmethodcolour}{violet}

\lstdefinestyle{myVBA}{
	language={[Visual]Basic},
	showtabs=true,
	tab=,
	tabsize=2,
	basicstyle=\ttfamily\footnotesize,%\setstretch{.5},
	keywordstyle=\ttfamily\color{keywordcolour},
	stringstyle=\color{stringcolour},
	showstringspaces=false,
	alsoletter={1234567890},
	rulecolor=\color{black!20},
	% framexleftmargin=\framemargin,
	framexleftmargin=1ex,
	framextopmargin=0.5ex,
	framexbottommargin=0.5ex,
	framexrightmargin=1ex,
	backgroundcolor=\color{black!4},
	breakindent=.5\textwidth,frame=tb,breaklines=true,
	xleftmargin=.05\textwidth, xrightmargin=.05\textwidth
}

\lstnewenvironment{vba}[1][]{\lstset{style=myVBA}}{}


%% ---------------- Define Source Code Styles for Python --------–--------–--------–


\definecolor{pytype}{RGB}{77,136,255}

\newcommand*{\pytype}[1]{{\color{pytype}\ttfamily{#1}}}

\newcommand*{\framemargin}{3ex}

\newcommand*{\literatecolour}{\textcolor{literatecolour}}

\newcommand*{\pythonprompt}{\textcolor{promptcolour}{{>}{>}{>}}}

\newcommand*{\py}[1]{{\color{magenta!90!black}\textbf{\ttfamily{#1}}}}

\lstdefinestyle{mypython}{
%\lstset{
%keepspaces=true,
language=python,
showtabs=true,
escapechar=\§,
tab=,
tabsize=2,
basicstyle=\ttfamily\footnotesize,%\setstretch{.5},
stringstyle=\color{stringcolour},
showstringspaces=false,
alsoletter={1234567890},
otherkeywords={\%, \}, \{, \&, \|},
keywordstyle=\color{keywordcolour}\bfseries,
emph={and,break,class,continue,def,yield,del,elif,else,%
except,exec,finally,for,from,global,if,import,as,in,%
lambda,not,or,pass,print,raise,return,try,while,assert,as,with},
emphstyle=\color{blue}\bfseries,
emph={[2]True, False, None},
emphstyle=[2]\color{keywordcolour},
emph={[3]object,type,isinstance,copy,deepcopy,zip,filter,map,enumerate,reversed,list,set,len,dict,tuple,xrange,execfile,real,imag,reduce,str,repr},
emphstyle=[3]\color{commandcolour},
emph={Exception,NameError,IndexError,SyntaxError,TypeError,ValueError,OverflowError,ZeroDivisionError},
emphstyle=\color{exceptioncolour}\bfseries,
%upquote=true,
morecomment=[s]{"""}{"""},
commentstyle=\color{commentcolour}\slshape,
%emph={[4]1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
emph={[4]ode, fsolve, sqrt, exp, sin, cos,arctan, arctan2, arccos, pi,  array, norm, solve, dot, arange, isscalar, max, sum, flatten, shape, reshape, find, any, all, abs, plot, linspace, legend, quad, polyval,polyfit, hstack, concatenate,vstack,column_stack,empty,zeros,ones,rand,vander,grid,pcolor,eig,eigs,eigvals,svd,qr,tan,det,logspace,roll,min,mean,cumsum,cumprod,diff,vectorize,lstsq,cla,eye,xlabel,ylabel,squeeze},
emphstyle=[4]\color{numpycolour},
emph={[5]__init__,__add__,__mul__,__div__,__sub__,__call__,__getitem__,__setitem__,__eq__,__ne__,__nonzero__,__rmul__,__radd__,__repr__,__str__,__get__,__truediv__,__pow__,__name__,__future__,__all__,fit,predict},
emphstyle=[5]\color{specmethodcolour},
emph={[6]assert,yield},
emphstyle=[6]\color{keywordcolour}\bfseries,
emph={[7]range},
emphstyle={[7]\color{keywordcolour}\bfseries},
% emph={[7]self},
% emphstyle=[7]\bfseries,
emph={[8]as},
emphstyle={[8]\color{keywordcolour}\bfseries},
literate=*%
{:}{{\literatecolour:}}{1}%
{=}{{\literatecolour=}}{1}%
{-}{{\literatecolour-}}{1}%
{+}{{\literatecolour+}}{1}%
{*}{{\literatecolour*}}{1}%
{**}{{\literatecolour{**}}}2%
{/}{{\literatecolour/}}{1}%
{//}{{\literatecolour{//}}}2%
{!}{{\literatecolour!}}{1}%
%{(}{{\literatecolour(}}{1}%
%{)}{{\literatecolour)}}{1}%
{[}{{\literatecolour[}}{1}%
{]}{{\literatecolour]}}{1}%
{<}{{\literatecolour<}}{1}%
{>}{{\literatecolour>}}{1}%
{>>>}{\pythonprompt}{3}%
,%
%aboveskip=.5ex,
%frame=TB,
frameround=tttt,
framesep=.3ex,
% framemargin=1ex,
rulecolor=\color{black!20},
% framexleftmargin=\framemargin,
framexleftmargin=1ex,
framextopmargin=0.5ex,
framexbottommargin=0.5ex,
framexrightmargin=1ex,
%framexleftmargin=1mm, framextopmargin=1mm, frame=shadowbox, rulesepcolor=\color{blue},#1
frame=single,
backgroundcolor=\color{black!8},
breakindent=.5\textwidth,frame=tb,breaklines=true,%
%}
xleftmargin=.05\textwidth, xrightmargin=.05\textwidth
}

\newcommand*{\inputpython}[3]{\lstinputlisting[firstline=#2,lastline=#3,firstnumber=#2,frame=single,breakindent=.5\textwidth,frame=single,breaklines=true,style=mypython]{#1}}

\lstnewenvironment{python}[1][]{\lstset{style=mypython}}{}

\lstdefinestyle{mypythoninline}{
style=mypython,%
escapechar=\§,
basicstyle=\ttfamily,%
keywordstyle=\color{keywordcolour},%
emphstyle={[7]\color{keywordcolour}},%
emphstyle=\color{exceptioncolour},%
literate=*%
{:}{{\literatecolour:}}{2}%
{=}{{\literatecolour=}}{2}%
{-}{{\literatecolour-}}{2}%
{+}{{\literatecolour+}}{2}%
{*}{{\literatecolour*}}2%
{**}{{\literatecolour{**}}}3%
{/}{{\literatecolour/}}{2}%
{//}{{\literatecolour{//}}}{2}%
{!}{{\literatecolour!}}{2}%
%{(}{{\literatecolour(}}{2}%
%{)}{{\literatecolour)}}{2}%
{[}{{\literatecolour[}}{2}%
{]}{{\literatecolour]}}{2}%
{<}{{\literatecolour<}}{2}%
{<=}{{\literatecolour{<=}}}3%
{>}{{\literatecolour>}}{2}%
{>=}{{\literatecolour{>=}}}3%
{==}{{\literatecolour{==}}}3%
{!=}{{\literatecolour{!=}}}3%
{+=}{{\literatecolour{+=}}}3%
{-=}{{\literatecolour{-=}}}3%
{*=}{{\literatecolour{*=}}}3%
{/=}{{\literatecolour{/=}}}3%
%% emphstyle=\color{blue},%
frame=none
}

\newcommand*{\pyth}{\lstinline[style=mypythoninline]}

\newcommand{\pyfunc}[1]{{\color{specmethodcolour}\ttfamily #1}}

%%    End of Source Code Style definitions
%%
%% ------------------------------------------------------------------------------------------------


\mode<all>
